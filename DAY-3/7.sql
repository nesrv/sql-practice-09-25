-- ## ROW_NUMBER() ‚Äî –£–Ω–∏–∫–∞–ª—å–Ω–∞—è –Ω—É–º–µ—Ä–∞—Ü–∏—è
-- –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ, –¥–∞–∂–µ –ø—Ä–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏—è—Ö.

SELECT
    seller,
    sale_date,
    amount,
    ROW_NUMBER() OVER (PARTITION BY seller ORDER BY sale_date) AS deal_sequence,
    ROW_NUMBER() OVER (ORDER BY sale_date) AS global_sequence
FROM sales
ORDER BY sale_date;


SELECT
    seller,
    sale_date,
    amount
    FROM (
    SELECT *,  ROW_NUMBER() OVER (PARTITION BY seller ORDER BY sale_date) as rn from sales ) 
 subq
 where rn <=2;



-- RANK() ‚Äî –û–ª–∏–º–ø–∏–π—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞
-- –ü—Ä–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏—è—Ö –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π —Ä–∞–Ω–≥, –Ω–æ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–Ω–≥ –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç—Å—è

SELECT
    seller,
    sale_date,
    amount,
    RANK() OVER (PARTITION BY seller ORDER BY amount DESC) AS sales_rank,
    CASE RANK() OVER (PARTITION BY seller ORDER BY amount DESC)
        WHEN 1 THEN 'ü•á –õ—É—á—à–∞—è'
        WHEN 2 THEN 'ü•à –í—Ç–æ—Ä–∞—è'
        WHEN 3 THEN 'ü•â –¢—Ä–µ—Ç—å—è'
        ELSE 'üìä –û—Å—Ç–∞–ª—å–Ω—ã–µ'
    END AS medal
FROM sales_2;


INSERT INTO sales_2 (seller, sale_date, amount, product_category) VALUES
('–û–ª–µ–≥', '2024-01-12', 200, '–û–¥–µ–∂–¥–∞');


SELECT
    seller,
    sale_date,
    amount,
    RANK() OVER (ORDER BY amount DESC) AS global_rank,
    ROUND(
        (RANK() OVER (ORDER BY amount DESC) - 1) * 100.0 / 
        (COUNT(*) OVER () - 1), 
        1
    ) AS percentile      
FROM sales_2;

-- ## DENSE_RANK() ‚Äî –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ–µ —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏–µ
-- –ö–∞–∫ RANK(), –Ω–æ –±–µ–∑ –ø—Ä–æ–ø—É—Å–∫–æ–≤ –≤ –Ω—É–º–µ—Ä–∞—Ü–∏–∏.

SELECT
    seller,
    sale_date,
    amount,
    RANK() OVER (PARTITION BY seller ORDER BY amount DESC) AS sales_rank,
    DENSE_RANK() OVER (ORDER BY amount DESC) AS sales_rank,
    ROW_NUMBER() OVER (ORDER BY amount DESC) AS row_num,
     CASE 
        WHEN RANK() OVER (PARTITION BY seller ORDER BY amount DESC) = 
             DENSE_RANK() OVER (PARTITION BY seller ORDER BY amount DESC)
        THEN '–†–∞–Ω–≥–∏ —Å–æ–≤–ø–∞–¥–∞—é—Ç'
        ELSE 'RANK –ø—Ä–æ–ø—É—Å—Ç–∏–ª –Ω–æ–º–µ—Ä'
    END AS rank_comparison
FROM sales_2
ORDER BY  amount DESC;


SELECT
    seller,
    sale_date,
    amount,
    -- –ü—Ä–µ–¥—ã–¥—É—â–∞—è, —Ç–µ–∫—É—â–∞—è, —Å–ª–µ–¥—É—é—â–∞—è
    LAG(amount) OVER w AS prev_amount,
    amount AS current_amount,
    LEAD(amount) OVER w AS next_amount,
    -- –¢—Ä–µ–Ω–¥ –∏–∑ —Ç—Ä–µ—Ö —Ç–æ—á–µ–∫
    CASE 
        WHEN LAG(amount) OVER w < amount AND amount < LEAD(amount) OVER w 
        THEN '–£—Å—Ç–æ–π—á–∏–≤—ã–π —Ä–æ—Å—Ç'
        WHEN LAG(amount) OVER w > amount AND amount > LEAD(amount) OVER w 
        THEN '–£—Å—Ç–æ–π—á–∏–≤–æ–µ —Å–Ω–∏–∂–µ–Ω–∏–µ'
        ELSE '–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–¥'
    END AS trend_analysis
FROM sales
WINDOW w AS (PARTITION BY seller ORDER BY sale_date);


SELECT
    seller,
    sale_date,
    amount,
    -- –°–∫–æ–ª—å–∑—è—â–∞—è —Å—É–º–º–∞ (—Ç–µ–∫—É—â–∞—è + –ø—Ä–µ–¥—ã–¥—É—â–∞—è)
    amount + COALESCE(LAG(amount) OVER w, 0) AS rolling_sum_2,
    -- –°—Ä–µ–¥–Ω—è—è –∏–∑ —Ç—Ä–µ—Ö –ø–æ—Å–ª–µ–¥–Ω–∏—Ö
    ROUND(
        (amount + 
         COALESCE(LAG(amount, 1) OVER w, amount) +
         COALESCE(LAG(amount, 2) OVER w, amount)
        ) / 3.0, 
        2
    ) AS moving_avg_3
FROM sales_2
WINDOW w AS (PARTITION BY seller ORDER BY sale_date)
ORDER BY seller, sale_date;


SELECT
    seller,
    sale_date,
    amount,
    CASE 
        WHEN amount = MAX(amount) OVER w THEN '–ú–∞–∫—Å–∏–º—É–º'
        WHEN amount = MIN(amount) OVER w THEN '–ú–∏–Ω–∏–º—É–º'
        ELSE '–û–±—ã—á–Ω–∞—è'
    END AS extremum_type,
    -- –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ—Ç —Å—Ä–µ–¥–Ω–µ–≥–æ
    ROUND(amount - AVG(amount) OVER w, 2) AS deviation_from_avg
FROM sales
WINDOW w AS (PARTITION BY seller)
ORDER BY seller, sale_date;

